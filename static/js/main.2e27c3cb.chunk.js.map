{"version":3,"sources":["components/Fullpage.js","components/Arrow.js","components/Firstsection.js","components/Secondsection.js","components/Thirdsection.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","react_default","a","createElement","className","concat","Component","Arrow","onClick","class","Firstsection","style","backgroundColor","bcolor","components_Fullpage","data","title","subtitle","Object","keys","links","map","key","react_social_icons","url","modules","activeClass","to","spy","smooth","offset","duration","onSetActive","handleSetActive","components_Arrow","name","Secondsection","sections","items","p","content","Thirdsection","_this","skill","color","ccolor","src","image","scroll","scrollToTop","Navigation","float","href","width","App","state","bcolor1","bcolor2","ChangeTheme","setState","cc","_this2","lib_default","components_Navigation","components_Firstsection","components_Secondsection","components_Thirdsection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mZAceA,0LAVH,IACGC,EAAYC,KAAKC,MAAjBF,SACP,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAS,YAAAC,OAAcN,KAAKC,MAAMI,WAAX,KACvBN,UALMQ,cCcRC,gMAZP,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAS,aAAAC,OAAeN,KAAKC,MAAMI,WAAX,IAA8BI,QAAST,KAAKC,MAAMQ,SAC3EP,EAAAC,EAAAC,cAAA,OAAKM,MAAM,SACPR,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,sBAPAG,qBCqCLI,mLA7BP,OACIT,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAACC,gBAAkBb,KAAKC,MAAMa,SAC1CZ,EAAAC,EAAAC,cAACW,EAAD,CAAUV,UAAY,SAClBH,EAAAC,EAAAC,cAAA,UAAKY,EAAKC,OACVf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKY,EAAKE,WAEdhB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,gBAETc,OAAOC,KAAKJ,EAAKK,OAAOC,IAAI,SAAAC,GACxB,OACIrB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,QACbH,EAAAC,EAAAC,cAACoB,EAAA,WAAD,CAAYC,IAAOT,EAAKK,MAAME,UAOtDrB,EAAAC,EAAAC,cAACsB,EAAA,KAAD,CAAMC,YAAY,SAASC,GAAG,QAAQC,KAAK,EAAMC,QAAQ,EAAMC,OAAQ,GAAIC,SAAU,IAAKC,YAAajC,KAAKkC,iBACxGhC,EAAAC,EAAAC,cAAC+B,EAAD,OAEJjC,EAAAC,EAAAC,cAACsB,EAAA,QAAD,CAASU,KAAK,QAAQ/B,UAAU,8BAxBjBE,aCuBZ8B,0LAtBP,OACInC,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAACC,gBAAkBb,KAAKC,MAAMa,SAC1CZ,EAAAC,EAAAC,cAACW,EAAD,CAAUV,UAAU,UAChBH,EAAAC,EAAAC,cAAA,UAAKY,EAAKsB,SAAS,GAAGrB,OACtBf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEXW,EAAKsB,SAAS,GAAGC,MAAMjB,IAAI,SAAAkB,GACvB,OAAOtC,EAAAC,EAAAC,cAAA,SAAIoC,EAAEC,aAKzBvC,EAAAC,EAAAC,cAACsB,EAAA,KAAD,CAAMC,YAAY,SAASC,GAAG,SAASC,KAAK,EAAMC,QAAQ,EAAMC,OAAQ,GAAIC,SAAU,IAAKC,YAAajC,KAAKkC,iBACzGhC,EAAAC,EAAAC,cAAC+B,EAAD,OAEJjC,EAAAC,EAAAC,cAACsB,EAAA,QAAD,CAASU,KAAK,SAAS/B,UAAU,8BAjBjBE,cCiCbmC,0LAhCH,IAAAC,EAAA3C,KACJ,OACIE,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAACC,gBAAkBb,KAAKC,MAAMa,SAC1CZ,EAAAC,EAAAC,cAACW,EAAD,CAAUV,UAAU,SAChBH,EAAAC,EAAAC,cAAA,UAAKY,EAAKsB,SAAS,GAAGrB,OACtBf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEXW,EAAKsB,SAAS,GAAGC,MAAMjB,IAAI,SAAAsB,GACvB,OACI1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOO,MAAO,CAACiC,MAAS,QAAUhC,gBAAkB8B,EAAK1C,MAAM6C,SAC1E5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAK2C,IAAKH,EAAMH,QAAQO,MAAO3C,UAAU,SAE7CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,UACKwC,EAAMH,QAAQxB,aAS3Cf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC+B,EAAD,CAAO1B,QAASwC,gBAAOC,YAAa7C,UAAU,kBA1BnCE,cCgBZ4C,0LAlBP,OACIjD,EAAAC,EAAAC,cAAA,OAAKM,MAAM,UACPR,EAAAC,EAAAC,cAACsB,EAAA,KAAD,CAAMC,YAAY,SAASf,MAAO,CAACwC,MAAS,SAAUxB,GAAG,QAAQC,KAAK,EAAMC,QAAQ,EAAMC,OAAQ,GAAIC,SAAU,IAAKC,YAAajC,KAAKkC,iBACnIhC,EAAAC,EAAAC,cAAA,KAAGiD,KAAK,SAAR,UAEJnD,EAAAC,EAAAC,cAACsB,EAAA,KAAD,CAAMC,YAAY,SAASf,MAAO,CAACwC,MAAS,SAAUxB,GAAG,SAASC,KAAK,EAAMC,QAAQ,EAAMC,OAAQ,GAAIC,SAAU,IAAKC,YAAajC,KAAKkC,iBACpIhC,EAAAC,EAAAC,cAAA,KAAGiD,KAAK,SAAR,WAGAnD,EAAAC,EAAAC,cAAA,KAAGiD,KAAK,SAAS5C,QAAWT,KAAKC,MAAMQ,SACnCP,EAAAC,EAAAC,cAAA,OAAK2C,IAAM,mBAAmBO,MAAM,kBAZnC/C,+BCiCVgD,6MA5BbC,MAAQ,CACNX,MAAQ,QACRY,QAAU,UACVC,QAAU,aAEZC,YAAc,WACZhB,EAAKiB,SAAS,CACZf,MAA4B,SAApBF,EAAKa,MAAMX,MAAmB,QAAU,QAChDY,QAAgC,WAAtBd,EAAKa,MAAMC,QAAuB,UAAkC,WAAtBd,EAAKa,MAAMC,QAAuB,UAAkC,WAAtBd,EAAKa,MAAMC,QAAuB,UAAY,UACpJC,QAAgC,WAAtBf,EAAKa,MAAME,QAAuB,UAAkC,WAAtBf,EAAKa,MAAME,QAAuB,UAAkC,WAAtBf,EAAKa,MAAME,QAAuB,UAAY,eAGxJG,GAAK,qFAGI,IAAAC,EAAA9D,KACP,OACEE,EAAAC,EAAAC,cAAA,OAAKQ,MAAS,CAACiC,MAAS7C,KAAKwD,MAAMX,QACjC3C,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,MACAD,EAAAC,EAAAC,cAAC4D,EAAD,CAAYvD,QAAW,kBAAMqD,EAAKH,iBAClCzD,EAAAC,EAAAC,cAAC6D,EAAD,CAAcnD,OAAUd,KAAKwD,MAAMC,UACnCvD,EAAAC,EAAAC,cAAC8D,EAAD,CAAepD,OAAUd,KAAKwD,MAAME,UACpCxD,EAAAC,EAAAC,cAAC+D,EAAD,CAAcrD,OAAUd,KAAKwD,MAAMC,QAASX,OAAU9C,KAAKwD,MAAME,kBAvBvDnD,aCIE6D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxE,EAAAC,EAAAC,cAACuE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2e27c3cb.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport './fullpage.css'\r\n\r\nclass Fullpage extends Component{\r\n    render(){\r\n        const {children} = this.props\r\n        return(\r\n            <div className={`fullpage ${this.props.className || ``}`}>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fullpage","import React, {Component} from 'react'\r\nimport './arrow.css'\r\n\r\nclass Arrow extends Component{\r\n    render(){\r\n        return(\r\n            <div className={`arrowflex ${this.props.className || ``}`} onClick={this.props.onClick}>\r\n                <div class=\"arrow\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Arrow","import React, {Component} from 'react'\r\nimport { SocialIcon } from 'react-social-icons';\r\nimport data from \"../data.json\"\r\nimport Fullpage from \"./Fullpage\"\r\nimport './firstsection.css'\r\nimport Arrow from \"../components/Arrow\"\r\nimport './arrow.css'\r\nimport { Link, Element , Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\r\n\r\nclass Firstsection extends Component{\r\n    render(){\r\n        return(\r\n            <div style={{backgroundColor : this.props.bcolor}}>\r\n            <Fullpage className = \"first\">\r\n                <h1>{data.title}</h1>\r\n                <div>\r\n                    <h2>{data.subtitle}</h2>\r\n                </div>\r\n                <div className = \"icon-wrapper\">\r\n                    {\r\n                        Object.keys(data.links).map(key => {\r\n                            return(\r\n                                <div className = \"icon\">\r\n                                    <SocialIcon url = {data.links[key]} />\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            </Fullpage>\r\n            <Link activeClass=\"active\" to=\"about\" spy={true} smooth={true} offset={50} duration={500} onSetActive={this.handleSetActive}>\r\n                <Arrow></Arrow>\r\n            </Link>\r\n            <Element name=\"about\" className=\"element apelement\">\r\n            </Element>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Firstsection","import React, {Component} from 'react'\r\nimport data from \"../data.json\"\r\nimport Fullpage from \"./Fullpage\"\r\nimport './secondsection.css'\r\nimport Arrow from \"../components/Arrow\"\r\nimport './arrow.css'\r\nimport { Link, Element , Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\r\n\r\nclass Secondsection extends Component{\r\n    render(){\r\n        return(\r\n            <div style={{backgroundColor : this.props.bcolor}}>\r\n            <Fullpage className=\"second\">\r\n                <h3>{data.sections[0].title}</h3>\r\n                <div className=\"paragraphs\">\r\n                {\r\n                    data.sections[0].items.map(p => {\r\n                        return <p>{p.content}</p>;\r\n                    })\r\n                }    \r\n                </div>\r\n            </Fullpage>\r\n            <Link activeClass=\"active\" to=\"skills\" spy={true} smooth={true} offset={50} duration={500} onSetActive={this.handleSetActive}>\r\n                <Arrow></Arrow>\r\n            </Link>\r\n            <Element name=\"skills\" className=\"element apelement\">\r\n            </Element>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Secondsection","import React, {Component} from 'react'\r\nimport data from \"../data.json\"\r\nimport Fullpage from \"./Fullpage\"\r\nimport './thirdsection.css'\r\nimport Arrow from \"../components/Arrow\"\r\nimport './arrow.css'\r\nimport { Link, Element , Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\r\n\r\nclass Thirdsection extends Component{\r\n    render(){\r\n        return(\r\n            <div style={{backgroundColor : this.props.bcolor}}>\r\n            <Fullpage className=\"third\"> \r\n                <h3>{data.sections[1].title}</h3>\r\n                <div className=\"card-wrapper\">\r\n                {\r\n                    data.sections[1].items.map(skill => {\r\n                        return(\r\n                            <div className=\"card\" style={{\"color\": \"black\" , backgroundColor : this.props.ccolor}}>\r\n                                <div className=\"img-wrapper\">\r\n                                    <img src={skill.content.image} className=\"img\" />\r\n                                </div>\r\n                                <div className=\"skill-title-wrapper\">\r\n                                    <h4>\r\n                                        {skill.content.title}\r\n                                    </h4>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n            </Fullpage>\r\n            <div>\r\n                <Arrow onClick={scroll.scrollToTop} className=\"r180\" />\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Thirdsection","import React, {Component} from 'react'\r\nimport './navigation.css'\r\nimport { Link, Element , Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\r\n\r\nclass Navigation extends Component{\r\n    render(){\r\n        return(\r\n            <div class=\"navbar\">\r\n                <Link activeClass=\"active\" style={{\"float\": \"right\"}} to=\"about\" spy={true} smooth={true} offset={50} duration={500} onSetActive={this.handleSetActive}>\r\n                    <a href=\"#home\">About</a>\r\n                </Link>\r\n                <Link activeClass=\"active\" style={{\"float\": \"right\"}} to=\"skills\" spy={true} smooth={true} offset={50} duration={500} onSetActive={this.handleSetActive}>\r\n                    <a href=\"#news\">Skills</a>\r\n                </Link>\r\n                {/* <Link activeClass=\"active\" to=\"about\" spy={true} smooth={true} offset={50} duration={500} onSetActive={this.handleSetActive}> */}\r\n                    <a href=\"#Theme\" onClick = {this.props.onClick}>\r\n                        <img src = \"images/brush.png\" width=\"40px\"></img>\r\n                    </a>\r\n                {/* </Link> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React, { Component } from 'react';\nimport './App.css';\nimport Firstsection from \"./components/Firstsection\"\nimport Secondsection from './components/Secondsection';\nimport Thirdsection from './components/Thirdsection';\nimport Navigation from './components/Navigation';\nimport SnowStorm from 'react-snowstorm';\n\nclass App extends Component {\n  state = {\n    color : \"white\",\n    bcolor1 : \"#a1c7ee\",\n    bcolor2 : \"#8eb6e0\",\n  }\n  ChangeTheme = () => {\n    this.setState({\n      color : this.state.color == \"white\" ? \"black\" : \"white\", \n      bcolor1 : this.state.bcolor1 == \"#a1c7ee\" ? \"#a1eea1\" : this.state.bcolor1 == \"#a1eea1\" ? \"#e94a4a\" : this.state.bcolor1 == \"#e94a4a\" ? \"#ddca23\" : \"#a1c7ee\",\n      bcolor2 : this.state.bcolor2 == \"#8eb6e0\" ? \"#82c55a\" : this.state.bcolor2 == \"#82c55a\" ? \"#c43434\" : this.state.bcolor2 == \"#c43434\" ? \"#b4a627\" : \"#8eb6e0\"\n    })\n  }\n  cc = () => {\n    \n  }\n  render() {\n    return (\n      <div style = {{\"color\": this.state.color}}>\n        <SnowStorm/>\n        <Navigation onClick = {() => this.ChangeTheme()}/>\n        <Firstsection bcolor = {this.state.bcolor1}/>\n        <Secondsection bcolor = {this.state.bcolor2}/>\n        <Thirdsection bcolor = {this.state.bcolor1} ccolor = {this.state.bcolor2}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}